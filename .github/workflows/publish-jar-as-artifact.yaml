name: Publish JAR as Artifact
on: 
  repository_dispatch:
    types: [publish-artifact-event]
jobs:
  download-artifact:
    runs-on: ubuntu-latest
    env:
      ARTIFACT_NAME: 'customer-0.0.1-SNAPSHOT.jar'
    permissions:
      contents: write
      pull-requests: write

    steps:
      - name: Debug Payload
        run: |
          echo "{{ github.event.client_payload.base_branch }}"

    # 1 - Download source code from default branch
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.event.client_payload.base_branch }}
          fetch-depth: 0

      - name: check last hashid
        run: |
          git log -2
      
      # 2- setup java 17 and check  that source code is buildable
      - name: setup java 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Cache local Maven dependencies
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-
      
      - name: build with maven
        run: |
          mvn clean test package -DskipTests=true --batch-mode --update-snapshots
          echo ls -R target/
          echo ls -la

      # 4 Publish it as artifact

      - name: Publish Package
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: artifactjar
          path: ${{ github.workspace }}/target/${{ env.ARTIFACT_NAME }}

      # 5 Call check sum of artifact
      - name: Verify SHA1sum
        if: success()
        id: cal_checksum_jar
        run: |
          ls -la ${{ github.workspace }}/target/
          SHA1=$(sha1sum ${{ github.workspace }}/target/$ARTIFACT_NAME | awk '{ print $1 }')
          JSON="{\"message\": \"publish artifact\", \"artifact_name\": \"${{ env.ARTIFACT }}\", \"checksum\": \"$SHA1\"}"
          echo JSON_PAYLOAD=$(printf '%s\n' "$JSON") >> $GITHUB_ENV

      # 4 Call deploy-artifact.yaml
      - name: trigger deploy artifact
        if: success()
        uses: peter-evans/repository-dispatch@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          repository: ${{ github.repository }}
          event-type: deploy-artifact-event
          client-payload: '{{fromJSON(env.JSON_PAYLOAD)}}'