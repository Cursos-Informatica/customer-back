name: build and test feature branch
on:
  pull_request:
    branches: [ develop ]
    types: [ opened,  reopened ]
jobs:
  build-feature:
    runs-on: ubuntu-latest
    steps:
    # 2- download code from feature branch, setup java 8 and check that source code is buildable
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.sha }}
      - name: pull and checkout for git repository
        run: |
           echo "Pulling and checking out the repository..."

      - name: setup java 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Cache Maven dependencies
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven- 

      - name: build with maven
        run: |
          mvn clean test package 
          echo "build with maven"

# Automatic merge to develop branch
  merge-feature-into-develop:
    runs-on: ubuntu-latest
    needs: build-feature
    if: ${{success()}}
    permissions:
      contents: write
      pull-requests: write
    steps:
    # 1 Download source code
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.base.ref }}
          fetch-depth: 0

    # 2 Merge to development branch
      - name: Merge to development branch
        if: ${{ success() }}
        run: |
          echo "Merging feature branch into develop..."
          git config --global user.email "EMAIL-OF-WORKFLOW@USER"
          git config --global user.name  "WORKFLOW-USER"
          git merge --no-ff --verbose origin/${{ github.event.pull_request.head.ref}} -m "Merge pull request #${{ github.event.number }} "

    # 3 Push changes after merge
      - name: Push changes after merge
        if: ${{ success() }}
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: ${{ github.base.ref }}

    # 4 Call publish-jar-as-artifact 
      - name: trigger deploy artifact
        if: ${{ success() }}
        uses: peter-evans/repository-dispatch@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          repository: ${{ github.repository }}
          event-type: publish-artifact-event
          client-payload: '{"base_branch": "${{ github.base.ref }}"}'